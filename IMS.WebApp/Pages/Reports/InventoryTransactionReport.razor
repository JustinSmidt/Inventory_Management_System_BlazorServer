@page "/inventoryreport"

@inject ISearchInventoryTransactionUseCase SearchInventoryTransactionUseCase
@inject IJSRuntime JSRuntime

<h3>Inventory Transactions</h3>

<div id="printarea">

    <div class="row">

        <div class="col">
            <label for="inv">Inventory Name</label>
            <input type="text" id="inv" class="form-control" @bind-value="invName" />
        </div>

        <div class="col">
            <label for="df">Date From</label>
            <input type="date" id="df" class="form-control" @bind-value="dateFrom" />
        </div>

        <div class="col">
            <label for="dt">Date To</label>
            <input type="date" id="dt" class="form-control" @bind-value="dateTo" />
        </div>

        <div class="col">
            <label for="at">Activity Type</label>
            <select id="at" class="form-control" @bind="activityTypeId">
                <option value="0">All</option>
                <option value="1">Purchase Inventory</option>
                <option value="2">Produce Product</option>
            </select>
        </div>

        <div class="col">
            <label for="">&nbsp;</label>    @*to occupy a space*@
            <button type="button" class="btn btn-primary form-control" @onclick="SearchInventories">Search</button>
        </div>

        <div class="col">
            <label for="">&nbsp;</label>    @*to occupy a space*@
            <button type="button" class="btn btn-primary form-control" @onclick="PrintReport">Print</button>
        </div>
    </div>

    <br />

    @if (inventoryTransactions != null)
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Inventory</th>
                    <th>Activity</th>
                    <th>Qty Before</th>
                    <th>Qty After</th>
                    <th>Unit Price</th>
                    <th>PO#</th>
                    <th>Production#</th>
                    <th>Done By</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var it in inventoryTransactions)
                {
                    <tr>
                        <td>@it.TransactionDate.ToString("MM/dd/yyyy")</td>
                        <td>@it.Inventory.InventoryName</td>
                        <td>
                            @if (it.ActivityType == InventoryTransactionType.PurchaseInventory)
                            {
                                <text>Purchase</text>
                            }
                            else if (it.ActivityType == InventoryTransactionType.ProduceProduct)
                            {
                                <text>Produce</text>
                            }
                        </td>
                        <td>@it.QuantityBefore</td>
                        <td>@it.QuantityAfter</td>
                        <td>@it.UnitPrice.ToString("c")</td>
                        <td>@it.PONumber</td>
                        <td>@it.ProductionNumber</td>
                        <td>@it.DoneBy</td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>



@code {
    private string invName = string.Empty;
    private DateTime? dateFrom;
    private DateTime? dateTo;
    private int activityTypeId = 0;

    private IEnumerable<InventoryTransaction>? inventoryTransactions;

    public async Task SearchInventories()
    {
        InventoryTransactionType? invType = null;
        if(activityTypeId != 0)
        {
            invType = (InventoryTransactionType)activityTypeId;     //converting activity type from integer to enumeration
        }                                                          //we are doing this because if we place activityTypeId in paramater in below method, it gives error = cannot convert from int to IMS.CoreBusiness.InventoryTransactionType. Thus we convert it first

        inventoryTransactions = await SearchInventoryTransactionUseCase.ExecuteAsync(invName, dateFrom, dateTo, invType);

    }


    public void PrintReport()
    {
        JSRuntime.InvokeVoidAsync("print");
    }
}
